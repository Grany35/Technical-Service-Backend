// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.DataAccess.Concrete.EntityFramework.Context;

#nullable disable

namespace Service.DataAccess.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20221020164934_propnullable")]
    partial class propnullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Service.Entities.Concrete.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Service.Entities.Concrete.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceDollar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReplacedPartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplacedPartId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Service.Entities.Concrete.ReplacedPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ServiceInformationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceInformationId");

                    b.ToTable("ReplacedParts");
                });

            modelBuilder.Entity("Service.Entities.Concrete.ServiceInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CustomerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FinalStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ServiceInformations");
                });

            modelBuilder.Entity("Service.Entities.Concrete.Part", b =>
                {
                    b.HasOne("Service.Entities.Concrete.ReplacedPart", null)
                        .WithMany("Parts")
                        .HasForeignKey("ReplacedPartId");
                });

            modelBuilder.Entity("Service.Entities.Concrete.ReplacedPart", b =>
                {
                    b.HasOne("Service.Entities.Concrete.ServiceInformation", null)
                        .WithMany("ReplacedParts")
                        .HasForeignKey("ServiceInformationId");
                });

            modelBuilder.Entity("Service.Entities.Concrete.ServiceInformation", b =>
                {
                    b.HasOne("Service.Entities.Concrete.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Service.Entities.Concrete.ReplacedPart", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("Service.Entities.Concrete.ServiceInformation", b =>
                {
                    b.Navigation("ReplacedParts");
                });
#pragma warning restore 612, 618
        }
    }
}
